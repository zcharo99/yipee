#!/bin/bash
# yipee aur helper source code
# completely made in bash

baseFolder="$HOME/.local/share/yipee/"
updater="$HOME/.local/share/yipee/updater"
version="0.1"
onlineversion=$(curl -s https://raw.githubusercontent.com/zcharo99/yipee/main/version)

if [ ! -f ${updater} ]; then
  	curl -s https://raw.githubusercontent.com/zcharo99/yipee/main/updater > ${baseFolder}updater
	chmod +x "${baseFolder}updater"
fi

checkupdates() {
  echo ":: Checking for updates..."
  if [ "$version" != "$onlineversion" ]; then
    echo ":: Update found, updating now."
    bash ${baseFolder}updater
  else
    echo ":: No update found."
  fi
}
clonerepo() {
  echo ":: Cloning repository..."
  git clone https://aur.archlinux.org/${OPTARG} ${repopath}/${OPTARG} > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    echo ":: Repository successfully cloned!"
  else
    echo "!! Error: Repository didn't clone successfully, exiting with code 1" >&2
    exit 1
  fi
}
buildpkg() {
  echo ":: Building package..."
  local args="$1"
  cd "$HOME/.local/share/yipee/repos/${OPTARG}/"
  makepkg -${args}
}
freshinstall() {
  removerepofolder
  clonerepo
  buildpkg "si"
}
removerepofolder() {
  rm -r ${repopath}/${OPTARG}
  echo ":: Repository folder removed"
}
ctrl_c() {
  echo "!! SIGINT recieved, stopping now..."
  exit 1
}

trap ctrl_c SIGINT

# check if more than one flag is used
if [ "$#" -gt 2 ]; then
  echo "!! Invalid: multiple flags cannot be used together" >&2
  exit 1
fi

# process the flags
while getopts ":S::R:" flag; do
  case "${flag}" in
    S)
      if [ -z "${OPTARG}" ]; then
	checkupdates
        pacman -Syu
      else
	repopath="$HOME/.local/share/yipee/repos"
	response=$(curl -s "https://aur.archlinux.org/rpc/?v=5&type=info&arg=${OPTARG}")
        if [[ "$response" == *'"resultcount":1,'* ]]; then
	  if [ -d "$repopath" ]; then
	    echo ":: PKGBUILD path already exists, delete or install from the existing pkgbuild?"
	    read -rp "[i]nstall or [D]elete: " answer
	    answer=$(echo "$answer" | tr '[:upper:]' '[:lower:]')

	    case "$answer" in
	      ""d|D|delete|Delete)
	        echo ":: Deleting and installing freshly..."
                sudo chown $(whoami):$(whoami) ${repopath}/${OPTARG}
		freshinstall
		;;
	      i|I|install)
		echo ":: Using existing folder..."
		buildpkg "si"
		;;
	      *)
		echo "?? Invalid option"
		exit 1
		;;
	    esac
	  else
	    mkdir -p ${repopath}
	    clonerepo
	    buildpkg "si"
	  fi
        else
	  echo "!! Error: AUR package does not exist" >&2
	  exit 1
	fi
      fi
      ;;
    R)
      if [ -z "${OPTARG}" ]; then
        echo "?? Invalid: -R requires a valid package name"
      else
	if [ -d ${repopath}/${OPTARG} ]; then
          echo ":: Uninstalling package and PKGBUILD..."
          rm -rf "${repopath}/${OPTARG}"
          pacman --noconfirm -R ${OPTARG} &>/dev/null
          if [ $? -eq 0 ]; then
            echo ":: Package uninstalled successfully."
          else
            echo "!! Error: Package did not uninstall correctly." >&2
            exit 1
          fi
        else
          echo "!! Error: \"${repopath}/${OPTARG}\" does not exist. Uninstalling only the package..."
          pacman --noconfirm -R ${OPTARG} &>/dev/null
          if [ $? -eq 0 ]; then
            echo ":: Package uninstalled successfully."
          else
            echo "!! Error: Package did not uninstall correctly." >&2
            exit 1
          fi
        fi
      fi
      ;;
    *)
      echo "?? Invalid option: -${OPTARG}"
      exit 1
      ;;
  esac
done

# check if no flags were passed
if [ $OPTIND -eq 1 ]; then
  checkupdates
  sudo pacman -Syu
fi

